version: '3.8'

services:
  vmware-inventory:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: vmware-inventory-dashboard:0.6.0
    container_name: vmware-inventory-dashboard
    
    # Port mapping
    ports:
      - "8501:8501"
    
    # Volume mounts
    volumes:
      # Persistent database storage
      - vmware-data:/app/data
      # Optional: mount external config
      # - ./config:/app/config:ro
    
    # Environment variables
    environment:
      - VMWARE_INV_DB_URL=sqlite:///data/vmware_inventory.db
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=true
      # Optional: customize port
      # - STREAMLIT_SERVER_PORT=8501
    
    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Restart policy
    restart: unless-stopped
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8501/_stcore/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Network
    networks:
      - vmware-network
    
    # Labels for container management
    labels:
      com.vmware.inventory.description: "VMware vSphere Inventory Dashboard"
      com.vmware.inventory.version: "0.6.0"
      com.vmware.inventory.component: "dashboard"

# Named volumes for data persistence
volumes:
  vmware-data:
    driver: local
    labels:
      com.vmware.inventory.description: "VMware inventory database storage"

# Network configuration
networks:
  vmware-network:
    driver: bridge
    labels:
      com.vmware.inventory.description: "VMware inventory dashboard network"
