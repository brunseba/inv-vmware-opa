[project]
name = "inv-vmware-opa"
version = "0.5.0"
description = "VMware inventory management CLI with backup/restore and label quality analysis"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Sebastien Brun", email = "brun_s@example.com"}
]
keywords = ["vmware", "inventory", "cli", "dashboard", "analytics", "vsphere"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "Topic :: System :: Systems Administration",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "click>=8.3.0,<9.0.0",
    "openpyxl>=3.1.5,<4.0.0",
    "pandas>=2.3.3,<3.0.0",
    "sqlalchemy>=2.0.44,<3.0.0",
    "xlsxwriter>=3.2.0,<4.0.0",
    "tabulate>=0.9.0,<1.0.0",
]

[project.optional-dependencies]
dashboard = [
    "streamlit>=1.40.0,<2.0.0",
    "plotly>=5.24.0,<6.0.0",
    "streamlit-extras>=0.7.8,<1.0.0",
    "watchdog>=6.0.0,<7.0.0",
]
reports = [
    "reportlab>=4.4.4,<5.0.0",
    "pillow>=11.3.0,<12.0.0",
    "matplotlib>=3.10.7,<4.0.0",
]
all = ["inv-vmware-opa[dashboard,reports]"]

[project.urls]
Homepage = "https://github.com/brunseba/inv-vmware-opa"
Documentation = "https://github.com/brunseba/inv-vmware-opa/docs"
Repository = "https://github.com/brunseba/inv-vmware-opa"
Issues = "https://github.com/brunseba/inv-vmware-opa/issues"
Changelog = "https://github.com/brunseba/inv-vmware-opa/blob/main/CHANGELOG.md"

[project.scripts]
vmware-inv = "src.cli:cli"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-data]
src = ["dashboard/*.py", "dashboard/pages/*.py"]

[dependency-groups]
dev = [
    "pytest>=8.4.2,<9.0.0",
    "pytest-cov>=7.0.0,<8.0.0",
    "pytest-faker>=2.0.0,<3.0.0",
    "mkdocs>=1.6.1,<2.0.0",
    "mkdocs-git-revision-date-localized-plugin>=1.4.7,<2.0.0",
    "mkdocs-material>=9.6.22,<10.0.0",
    "mkdocs-with-pdf>=0.9.3,<1.0.0",
]
security = [
    "bandit>=1.7.0,<2.0.0",
    "safety>=3.0.0,<4.0.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "-v"
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "tests/*",
    "src/dashboard/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.black]
line-length = 120
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''
